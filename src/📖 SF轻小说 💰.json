{
    "bookSourceComment": "",
    "bookSourceGroup": "📖 轻文",
    "bookSourceName": "📖 SF轻小说 💰",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.sfacg.com",
    "bookUrlPattern": "",
    "customOrder": -1478,
    "enabled": true,
    "enabledExplore": true,
    "exploreUrl": "首页::/\n最新::/latelist\n签约::/latelist/s\nVIP::/vip/\n人气::/rank/original.html\n畅销::/rank/sale.html\n新书::/rank/new.html\n日轻::/rank/jp.html\n收藏::/rank/bm.html\n魔幻::/API/HTML5.ashx?op=latest&index={{page}}&tid=21\n玄幻::/API/HTML5.ashx?op=latest&index={{page}}&tid=22\n古风::/API/HTML5.ashx?op=latest&index={{page}}&tid=23\n科幻::/API/HTML5.ashx?op=latest&index={{page}}&tid=24\n校园::/API/HTML5.ashx?op=latest&index={{page}}&tid=25\n都市::/API/HTML5.ashx?op=latest&index={{page}}&tid=26\n游戏::/API/HTML5.ashx?op=latest&index={{page}}&tid=27\n同人::/API/HTML5.ashx?op=latest&index={{page}}&tid=28\n悬疑::/API/HTML5.ashx?op=latest&index={{page}}&tid=29",
    "lastUpdateTime": 1620721701643,
    "loginUrl": "https://m.sfacg.com/login",
    "ruleBookInfo": {
        "author": ".book_info3@tag.span@text##\\s.*",
        "coverUrl": ".book_info@tag.img@src",
        "intro": ".book_profile@tag.li.1@html",
        "kind": ".book_info2@tag.span@text&&.book_info3@textNodes",
        "lastChapter": "",
        "name": ".book_info@tag.span.0@text",
        "tocUrl": "text.目录列表@href",
        "wordCount": ""
    },
    "ruleContent": {
        "content": "div[style=text-indent: 2em;]@html@js:\nresult",
        "imageStyle": "FULL",
        "nextContentUrl": ""
    },
    "ruleExplore": {
        "author": "@js:\nif(baseUrl.match(/API/))\nJSON.parse(result).AuthorName;\nelse {\njava.setContent(result);\nString(java.getString(\"tag.div.-1@text\",false)).replace(/\\/.*/,'').replace(/null/,'');}",
        "bookList": "<js>\nif(baseUrl.match(/API/))\n//JSON.parse(decodeURIComponent(result));\ndecodeURIComponent(result).match(/\\{.*?\\}/g);\nelse\norg.jsoup.Jsoup.parse(result).select(\".book_bk_qs1 a:has(img)\")\n</js>",
        "bookUrl": "href||/b/{$.NovelID}/",
        "coverUrl": "img@src||https://rs.sfacg.com/web/novel/images/NovelCover/Big/{$.NovelCover}",
        "intro": "tag.li.0@text",
        "kind": "@js:\nif(baseUrl.match(/API/))\nJSON.parse(result).TypeName;\nelse {\njava.setContent(result);\nString(java.getString(\"tag.div.-1@text\",false)).replace(/.*?\\//,'').replace(/null/,'');}",
        "lastChapter": "",
        "name": "id.listtitle@textNodes||text||$.NovelName"
    },
    "ruleSearch": {
        "author": "$.AuthorName",
        "bookList": "$.Novels[0,1]",
        "bookUrl": "/i/{$.NovelID}/",
        "coverUrl": "https://rs.sfacg.com/web/novel/images/NovelCover/Big/{$.NovelCover}",
        "intro": "@js:java.get('intro')",
        "kind": "@js:\nvar bid=String(result).match(/NovelID=(\\d+)/)[1];\nvar url=\"http://book.sfacg.com/Novel/\"+bid+\"/\";\nimportClass(org.jsoup.Jsoup);\nresult=Jsoup.parse(java.ajax(url));\nvar intro=String(result.select(\".introduce\").text()).trim();\nvar last=result.select(\".chapter-title a\").text();\nvar tags=result.select(\".text-row:eq(0)\").text();\njava.put('intro',intro);\njava.put('last',last);\ntags=tags.match(/类型：(.*?)\\s字数：(.*?)\\[(.*?)\\]\\s.*/);\n(tags)?tags.shift()&&tags.join(',').replace(/已|中/,''):'';",
        "lastChapter": "@js:java.get('last')",
        "name": "$.NovelName",
        "wordCount": ""
    },
    "ruleToc": {
        "chapterList": "+@js:\nvar list=[];\nvar url=result.match(/\\/c\\/\\d+\\//g);\nvar n1=new RegExp(/mulu\">(.+)<\\/d/g);\nvar n3=new RegExp(/href=\"\\/c\\/\\d+\\/\"><li>(.+?)<\\/l/g);\nvar n;var n_pre='';var n_sub;\nvar n_temp;\nvar t=-1;\nvar p=[];var p_tmp;\nvar i=-1;var i_tmp;\n//获取每卷的标题\nwhile((n_temp=n1.exec(result))!=null){\ni=i+1;\np.push({q:n_temp[1],w:n1.lastIndex});\n}\ni_tmp=i;\n\nwhile((n_temp=n3.exec(result))!=null){\n//获取每话的标题\nn_sub=n_temp[1];\n//判断VIP\nif((n_sub.match(/span/))!=null){\nn_sub=n_sub.match(/span>(.+)<\\/span><spa/)[1];n_sub='🔒'+n_sub;\n}\n//给每话的标题添加卷标题\nif(p[0]!=null){\ni=i_tmp;\np_tmp=p[i].w;\nwhile(p_tmp>n3.lastIndex){\ni=i-1;\np_tmp=p[i].w;\n}\nn_pre=p[i].q;\nn_pre=n_pre+' | ';\n}\n//保存数据到数组\nn=n_pre+n_sub;\nt=t+1;\nlist.push({k:n,v:url[t]});\n}\nlist;",
        "chapterName": "k",
        "chapterUrl": "v"
    },
    "searchUrl": "/API/HTML5.ashx?op=search&keyword={{key}}",
    "weight": 0
}